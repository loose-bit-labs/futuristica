const int LAYERS_0_WEIGHT_0_SIZE = 16;
const int LAYERS_0_WEIGHT_1_SIZE = 2;
const int LAYERS_2_WEIGHT_0_SIZE = 16;
const int LAYERS_2_WEIGHT_1_SIZE = 16;
const int LAYERS_4_WEIGHT_0_SIZE = 16;
const int LAYERS_4_WEIGHT_1_SIZE = 16;
const int LAYERS_6_WEIGHT_0_SIZE = 16;
const int LAYERS_6_WEIGHT_1_SIZE = 16;
const int LAYERS_8_WEIGHT_0_SIZE = 16;
const int LAYERS_8_WEIGHT_1_SIZE = 16;
const int LAYERS_10_WEIGHT_0_SIZE = 16;
const int LAYERS_10_WEIGHT_1_SIZE = 16;
const int LAYERS_12_WEIGHT_0_SIZE = 16;
const int LAYERS_12_WEIGHT_1_SIZE = 16;
const int LAYERS_14_WEIGHT_0_SIZE = 16;
const int LAYERS_14_WEIGHT_1_SIZE = 16;
const int LAYERS_16_WEIGHT_0_SIZE = 16;
const int LAYERS_16_WEIGHT_1_SIZE = 16;
const int LAYERS_18_WEIGHT_0_SIZE = 16;
const int LAYERS_18_WEIGHT_1_SIZE = 16;
const int LAYERS_20_WEIGHT_0_SIZE = 16;
const int LAYERS_20_WEIGHT_1_SIZE = 16;
const int LAYERS_22_WEIGHT_0_SIZE = 3;
const int LAYERS_22_WEIGHT_1_SIZE = 16;

const float LAYERS_0_WEIGHT[] = float[32](.04,-1.04,-.53,.93,-.77,.58,.82,1.04,-1.09,-.07,-1.11,1.11,.78,.02,-.46,.68,1.63,-.33,-.89,-1.09,.53,-.06,1.36,.85,-1.33,-1.13,-.99,.19,.74,-.38,.16,-.06);
const float LAYERS_0_BIAS[] = float[16](-.65,.38,.01,.20,-.82,-.23,.28,.55,-.12,-.22,-.71,-.39,-.56,-.74,.49,-.44);
const float LAYERS_2_WEIGHT[] = float[256](-.07,-.16,.07,.17,-.25,-.18,-.08,-.14,-.18,-.16,-.13,-.21,-.16,.12,-.19,-.11,-.25,-.25,.17,-.22,-.21,-.24,.10,-.01,-.28,.16,.19,-.07,-.26,.23,-.28,-.22,-.37,.15,.60,.43,.39,.79,.12,.35,.01,.16,-.08,.34,1.13,-1.09,.06,-.03,-.24,-.10,-.04,.02,.06,.04,-.15,-.15,-.00,-.19,.16,-.15,.10,-.24,.04,-.21,-.32,.29,.45,.12,.01,.39,-.42,.11,.69,-.64,.18,-.18,-.00,1.48,-.73,.24,-.85,.34,.36,.22,.18,-.03,.08,.10,-.23,-.89,.16,-1.25,-2.32,2.16,-.18,-.04,.91,.21,.29,-.02,-1.89,-.01,.01,.41,-.19,-1.27,-.05,-.89,-2.08,-.61,.35,.31,-.50,.23,.33,.35,-2.16,.34,-.83,.27,-.10,.53,-.04,-2.22,-2.49,-.00,-1.25,.21,-.34,-.14,.39,.48,1.13,.10,.40,.44,.78,.36,-.00,.39,.62,-1.40,.31,.34,-.19,.20,-.07,-.08,-2.05,-.08,-1.52,.09,-.23,1.52,-.02,-4.57,-1.20,.24,-3.14,-.09,-.53,.55,.55,-.15,.14,.50,.20,.04,-.92,-.23,-.08,-.64,-.12,.60,.26,.11,-9.05,.53,.05,-.63,-1.36,.29,-.01,-.06,.19,-.48,.00,-1.56,-2.35,2.06,-.25,.24,-2.02,.47,.61,-.47,1.11,.65,.30,-.45,-1.69,.21,.08,-.68,1.18,-.90,-.48,.46,-.06,.03,.15,-.19,.04,-.01,-.32,-.20,.02,.04,.10,.05,-.04,-.24,.10,-.19,-.37,.37,.28,-1.02,-2.86,.41,-1.01,-.00,.11,.51,-.13,-1.45,-.04,-.11,-.11,-.03,-.26,-.00,.20,-1.06,-2.02,.46,-.19,-.54,-.36,-.03,.04,-1.47,-.48,1.63,.39,-.14);
const float LAYERS_2_BIAS[] = float[16](.13,.06,-.12,-.03,-.00,.24,.12,-.22,-.24,.10,.19,.16,-.24,-.43,.23,.17);
const float LAYERS_4_WEIGHT[] = float[256](-.10,-.00,-.14,-.00,.28,.39,.50,.66,-.46,.83,-.19,-.02,-1.35,.21,.28,1.33,-.05,.03,.47,.19,.06,.49,-.38,-.74,-.21,-.54,.84,.28,.47,.18,.34,-.80,-.21,-.00,.44,.10,-1.84,.61,-1.72,-1.35,.57,2.64,2.08,-.87,-1.02,.11,-1.33,.30,.05,.03,-.35,-.18,.33,.70,-.13,.47,-.21,.62,-.07,.11,-.42,-.05,-.18,1.52,-.13,-.23,-.10,.22,.04,-.15,-.05,.10,-.24,.15,-.17,.02,-.21,.02,-.19,-.01,-.24,.11,-.49,.04,.43,-.05,.32,.91,-.54,1.62,.01,.41,-.87,.11,.87,.54,-.20,.21,-.62,-.24,.23,.48,.04,-.11,-1.01,1.41,.06,.52,-.89,-.02,.48,.48,-.19,-.10,-.32,.02,.31,.21,.64,.37,.12,.20,.28,-.13,-.01,-.02,.83,1.11,-.22,-.01,-.37,.19,.81,.65,.24,.36,.01,-.14,.10,-.28,-.69,.23,.70,.38,.22,.16,.38,-.21,.17,.33,.48,.42,-.19,-.66,-.23,.26,-.64,-.21,.80,.17,-.19,-.00,.30,.20,-.09,1.20,-.14,.68,.33,.14,-1.80,1.19,-7.55,-.02,-.79,1.00,-.15,-.08,-.13,-.04,-.21,.08,-.06,.13,-.09,-.11,.01,.22,-.22,-.01,-.17,.06,.18,.10,-.20,-.18,-.00,-.19,-.20,-.14,-.07,-.17,-.10,.22,-.24,-.19,.23,-.23,.24,-.24,.08,-.09,-.30,.13,.08,.14,-.06,-.19,-.09,.12,.07,.12,.04,-.08,.11,.03,-.07,.07,-.17,-.20,-.09,-.02,-.14,.20,-.11,.15,.21,-.16,-.05,-.08,-.10,-.01,-.80,.15,.29,.53,.31,.26,-.97,-.01,-.20,.77,-1.02,.13,.69,-.82);
const float LAYERS_4_BIAS[] = float[16](-.08,-.24,-.72,-.85,-.25,.18,.14,.12,-.18,.04,.05,-.05,-.19,-.28,-.20,.18);
const float LAYERS_6_WEIGHT[] = float[256](.55,.06,-1.50,-2.63,.01,-.78,-2.97,.23,.59,.15,-2.32,-.07,-.04,.19,-.19,-3.55,.16,-.14,.10,-.27,.20,-.06,-.19,.18,.15,-.11,-.17,-.06,-.15,.02,-.16,-.30,-1.48,1.16,.16,.82,.02,.39,-1.99,-1.19,-.19,-.12,.04,.16,.11,.04,-.03,.09,-.18,.38,.66,-2.24,-.02,.46,.39,-.44,.19,-.06,-.36,-.13,-.05,.11,.01,.95,-.16,-.08,-.06,-.00,.07,.14,-.16,-.33,-.02,-.13,-.12,-.24,-.24,.24,.03,-.23,.21,-.20,-.24,-.21,-.05,.20,-.22,-.17,-.19,-.01,.20,-.03,-.25,-.03,.24,-.08,-.11,-.03,-.07,-.03,-.15,.05,-.16,-.50,-.24,-.03,-.01,.18,.12,.10,.20,-.05,.11,-.08,-.18,-.24,-.21,.02,-.03,-.20,-.06,-.06,.04,.23,.21,-.17,.01,.05,.20,.02,.08,.10,.16,.13,-.21,-.31,-.18,.06,-.04,.25,.16,-.07,.16,.00,.61,-.60,-.37,-1.04,.08,.85,1.40,.20,-.25,.46,.09,-.00,-.08,-.21,.01,.15,-.21,-.18,-.11,-.19,.21,-.03,.10,-.17,-.24,.04,.02,-.10,.10,.06,.16,.20,.42,-.56,-.09,1.73,.11,.23,1.98,.33,.21,.51,-.22,.19,.05,.01,-.06,-1.95,-.53,.44,-.83,-1.19,-.03,-.09,-.45,.21,-.08,.04,-.61,-.21,-.04,-.13,.15,-.10,1.09,-.49,-.10,-.11,-.01,-.14,.82,.17,.71,-.32,.43,.07,.06,-.21,.17,.22,.17,-.23,1.29,.01,.09,-.24,-.32,-.64,.73,-.67,.23,-.21,.08,.17,-.18,-.20,.79,-.67,-.30,-.00,.05,.77,-.46,.09,.42,.65,.30,-.16,-.24,.10,-.22,.67);
const float LAYERS_6_BIAS[] = float[16](-.28,-.25,-.24,-.43,-.25,-.16,-.27,-.06,-.23,.12,-.14,-.22,.37,.14,-.39,.35);
const float LAYERS_8_WEIGHT[] = float[256](-2.11,.03,1.07,1.40,-.05,.25,-.26,.25,-.19,-.01,-.05,-.94,-.52,.41,.37,.25,-.24,.19,.14,-.15,-.05,.23,-.03,.25,-.03,.01,.22,.14,-.12,.18,-.17,-.20,.75,-.08,.95,1.72,.18,-.12,-.27,.07,.02,.15,.13,-.04,-1.37,.13,-.14,.28,.39,.16,1.02,.53,.07,.16,.05,.18,.08,-.48,-.18,.03,.38,-1.18,-1.61,-.07,-.05,-.01,.20,-.01,-.14,.03,.09,.12,-.06,.12,-.22,-.01,-.24,.10,.11,-.29,-.27,.06,1.18,2.02,-.02,.18,-.26,-.10,-.09,.52,-.02,-.39,-.23,-.04,-.17,.36,.52,.08,.94,.86,.19,-.03,.11,.19,-.19,-.02,-.09,.34,.19,-.42,-1.95,.36,.73,-.07,2.61,1.76,-.21,-.19,.10,-.24,-.24,-.14,.13,-.24,.71,-.43,-.12,-.28,.12,-.20,-.21,.07,.08,-.06,-.17,.12,.18,-.06,-.12,.05,-.10,-.10,-.20,-.02,-.01,.10,1.80,1.95,.01,-.22,.05,-.06,.13,.19,.18,-.10,-.72,.34,-.21,.69,-4.64,.05,-.99,-1.56,.05,.01,.07,-.03,-.16,-.63,-.18,-.37,.67,.18,-.33,.20,-2.06,-.13,.07,1.63,-.32,-.16,-.43,-.10,.06,.01,.06,-.45,.76,-.11,-.19,-.34,-.35,-.03,1.18,.06,.11,-.12,-.17,.04,-.22,.56,.19,.76,-.53,.23,-1.81,.11,-.47,.00,.86,-1.75,.14,.16,-.00,.12,-.21,.39,-.22,-.24,.10,.31,-.73,.10,.16,.05,.38,-2.31,.23,.16,-.32,.09,-.13,.59,.01,.22,-.38,.14,-1.57,.56,.02,.19,.12,-.15,-.19,-.11,-.30,.06,.23,.01,-.22,-.12,-.15,.04,-.17,-.02);
const float LAYERS_8_BIAS[] = float[16](.32,-.14,.10,.48,-.31,.26,-.89,.39,-.16,.11,.26,.21,-.24,.03,-.02,-.16);
const float LAYERS_10_WEIGHT[] = float[256](.01,-.11,.17,.03,-.16,-.29,-.21,-.04,.15,-.24,.05,-.05,-.16,-.08,.08,.20,-.40,.02,-.24,-.06,.06,-.30,-.23,-.12,-.05,-.53,-.33,-.35,-.17,-.30,-.02,-.07,-1.60,-.18,-1.22,-.12,-.11,.16,.17,-.83,.24,-.15,3.51,-7.43,.30,.14,.31,.08,.13,.22,-.16,.25,-.22,-.01,-.24,-.18,.02,-.09,.13,.13,.18,-.08,-.07,-.23,-.16,-.24,-.19,-.19,.00,.01,.25,-.09,.09,-.31,.01,.07,-.20,.01,-.05,-.06,-.48,.11,-.50,-.01,.18,.66,-.20,.22,.21,-.18,-1.18,.40,.44,.68,.27,-.06,-.22,.19,-.21,-.32,-.05,-.27,.13,-.03,-.04,-.26,-.21,.03,-.05,-.10,-.15,.01,.05,-.04,-.31,-.26,-.04,-.48,-.04,-.14,-.01,-.20,-.13,-.28,-.13,-.05,-.12,.02,-.07,-.15,-.14,.10,.11,-.20,-.13,-.09,.14,.16,.14,-.05,-.21,.16,.02,.11,-.04,.15,.00,-.14,.09,-.13,.04,-.21,-.05,-.17,-.30,-.19,.11,-.33,-.23,-.18,-.08,.07,.18,-.14,.03,-.20,-.13,-.10,.05,-.12,-.13,-.01,.21,-.09,-.09,-.23,-.01,-.08,-.29,-.09,-.05,-.29,-.00,-.04,.18,-.20,-.20,.04,-.12,-.33,-.11,.05,.13,.04,-.06,-.25,.08,-.09,.19,.04,.05,-.05,-.05,.02,-.04,-.26,-.06,.12,-1.14,.10,-.39,.20,-.05,.45,.74,.18,.00,-.31,-.59,-.44,-.33,.07,-.60,.16,.36,.13,-.16,.46,-.17,-.04,1.81,.19,-.20,-.36,-.47,.05,1.41,-.55,-.52,-.21,.11,-.12,.43,1.65,-.07,.30,.06,-.88,.04,.47,-.67,-1.26,-.01,.31,.67,.12);
const float LAYERS_10_BIAS[] = float[16](-.12,-.22,-.43,-.31,-.14,.37,.08,-.52,-.16,-.18,-.16,-.43,-.19,.58,-.20,-.21);
const float LAYERS_12_WEIGHT[] = float[256](-.09,-.10,.90,.04,-.02,-.57,.13,.23,.06,-.07,-.21,.17,.04,.32,-.49,.74,-.10,-.05,-1.31,-.04,-.02,-.14,.04,-.17,-.31,.04,-.20,.11,.16,-.23,.49,-.15,.13,.14,-.05,-.23,-.00,-.18,.15,-.24,.11,-.00,.22,.12,.22,-.08,-.06,-.08,.05,.08,2.46,-.12,.12,.40,-.14,-.05,-.24,.06,-.03,.15,.17,-.01,-.68,-.55,-.01,.42,.33,-.02,.08,.42,-.10,.10,.06,-.01,.19,-.06,.15,-.12,-.24,.91,.13,.00,-.16,.04,-.13,-.21,.12,.01,.16,-.08,-.24,.00,-.20,.01,-.22,-.16,.07,.25,-.34,.22,-.00,-.04,-.14,.20,.00,-.35,.19,.09,.09,.36,-.38,.84,.10,-.14,.13,-.14,.04,-.02,.03,.18,-.09,-.25,.01,-.18,-.01,.06,-.17,-.14,.07,-.33,-1.69,-.20,.06,.22,-.13,-.13,.33,-.09,-.12,-.17,-.13,1.42,.35,.49,.04,.23,-.20,.13,.10,-.10,-.11,-.12,-.16,-.15,.07,-.06,.06,-.05,-.19,-.25,.08,.03,-.10,.09,.05,-.21,.17,-.17,-.00,.21,.16,-.08,.22,-.06,.06,-.19,.15,.05,.53,-.15,.14,-.11,.17,.15,.03,.16,-.22,-.08,.08,.10,.38,.12,-.05,.15,-.06,-.04,.08,.26,.11,-.05,.10,.03,-.10,.12,-.12,1.01,-.20,.40,.10,.04,-.16,.09,-.02,-.09,-.25,.16,.09,.20,.06,-.02,.03,-.16,.04,.01,-.09,-.22,.06,.04,-.02,-.32,-.15,-.09,.12,-.02,.22,-.21,.16,.03,-.25,-.31,.21,.17,1.07,-.11,.05,-.78,.13,.14,.33,-.03,-.07,-.00,-.05,.25,.06,.78);
const float LAYERS_12_BIAS[] = float[16](-.00,.05,-.01,.05,-.04,-.21,-.04,-.14,-.07,-.15,-.26,-1.07,.01,-.13,-.26,-.03);
const float LAYERS_14_WEIGHT[] = float[256](.09,-.13,-.02,-.10,-.06,.15,-.18,.03,-.08,.16,.05,.03,.10,.24,.19,.00,-.24,.16,.20,.02,-.14,-.04,.15,-.03,-.20,.19,-.07,-.17,-.03,-.10,-.05,-.00,-.03,.13,-.02,.23,.45,.14,.78,.21,.70,-.20,.08,.05,.29,-.06,-.14,.05,-.50,-.08,-.05,.82,.35,-.18,-.54,-.03,-.56,-.01,.08,.52,-.32,.13,.15,-.74,-2.53,-.05,.06,-1.55,.23,.24,-.88,.25,.13,-.10,-.04,-.82,.02,-.12,.16,-1.23,.06,.05,.08,-.17,-.24,.09,-.14,.13,-.04,-.06,-.20,-.03,-.03,-.01,-.21,.01,-.23,-.32,-.07,-.06,-.12,.09,-.09,.08,.03,-.25,.17,.05,-.04,.23,.23,.09,-.08,.38,.28,-.24,.03,-.22,-.09,.19,.26,-.24,.24,-2.36,.34,-.23,-.14,.83,.09,-.05,-.05,.12,.46,.04,.56,-.02,.15,-.18,.06,.48,.19,.15,-.11,-.30,-.26,-.23,.10,.18,-.06,-.08,-.01,.09,.06,-.24,.22,.01,-.28,.18,-.18,-.10,-.13,.43,-.14,-1.16,-.39,-.12,-.44,-.10,-.47,-.09,.15,.02,-.48,-.03,-.22,.23,-.72,-.17,.04,-.14,.25,.09,-.28,-.24,.16,.04,.07,-1.64,.17,.05,-.12,-1.25,-.17,.10,.01,.07,-.09,.22,-.21,-.03,-.07,-.11,.04,-.23,-.13,-.03,-.22,-.14,.63,-.34,.32,1.08,.37,.02,.53,.22,.01,-.14,-.07,.74,.34,.04,-.43,.46,-.29,-.10,.10,-.27,.00,.19,.03,.13,-.14,.18,.14,-.22,-.11,-.09,-.08,-.22,-.28,.46,.17,-.02,-.41,.24,-1.27,-.00,.22,.10,-.05,-1.36,-.08,.01,-.10,-.40);
const float LAYERS_14_BIAS[] = float[16](-.22,-.05,-.06,.28,.28,-.01,-.13,-.00,.01,-.33,-.32,.24,-.05,-.01,-.05,-.50);
const float LAYERS_16_WEIGHT[] = float[256](-.10,.18,-.14,-.12,-.09,.17,-.18,-.00,-.32,-.21,-.22,.12,-.03,-.09,.19,.16,-.23,-.01,-.28,.01,-.23,.05,.15,-.15,-.10,.08,-.17,.24,-.17,.01,.16,.13,.09,.19,.06,.16,.04,-.11,.22,.06,-.21,-.23,.04,.04,.14,-.20,.14,-.04,-.00,.18,.17,-.30,-.06,-.17,.33,-.49,.32,.05,.30,-.53,-.24,.55,.12,-1.36,-.08,.25,-.04,.02,-.28,.15,-.18,-.36,-.59,-.20,.18,-.00,-.15,-.20,-.30,.02,-.18,.05,-1.40,1.24,.30,-.01,.09,-.21,-.66,.23,-.31,-.35,-.05,-.25,.30,.25,.14,-.12,.09,-.74,-.23,.28,.39,-.07,.42,.15,.02,-.34,-.04,.65,-.03,1.60,.22,.05,-.87,1.25,-.23,-.15,.24,-.20,-.27,-.14,.07,.10,.20,-.08,-.11,.27,-.20,-.24,.33,.49,.45,.07,-.24,.49,.33,.06,-.26,.55,.15,-.38,-.07,-.28,-.22,-.20,-.42,-.30,-.13,.06,.08,-.19,-.05,-.02,.06,-.03,.14,-.03,.14,.12,.06,-.11,-.14,.20,-.03,.05,.03,.01,-.22,.07,.15,.00,-.19,-.33,.13,-.02,-.13,-.21,.28,.81,-1.02,-.43,-.27,-.68,.41,.18,-.05,-.33,-.04,-.06,-.03,.31,.09,.07,-.13,1.09,.21,.22,-.30,-.22,.26,-.19,-.13,.32,.13,-.27,-.07,.62,.02,.10,.19,.66,.28,-.14,-.06,.11,.05,.01,-.20,-.13,-.08,-.39,-.28,-.35,-.22,.18,.12,-.74,-.65,-.15,.12,.03,.11,-.21,.08,.26,-.07,-.11,.05,-.20,.02,-.12,-.04,-.18,-.37,.03,-.19,-.37,-.40,-.18,-.21,-.05,-.03,-.11,.03,.13);
const float LAYERS_16_BIAS[] = float[16](-.29,-.15,-.20,.19,.04,.29,.23,.12,.06,-.05,-.28,-.50,.38,.20,.28,.06);
const float LAYERS_18_WEIGHT[] = float[256](.17,.20,-.08,-.26,.14,-.31,-.07,-.22,-.04,.08,.21,-.24,-.15,.16,-.28,-.30,.25,.23,.03,.17,.08,-.61,.56,-.49,-.51,.12,.33,.31,-.52,.19,.10,-.03,.06,.06,-.21,-.09,-.20,-.17,-.09,.05,.11,-.18,.21,-.35,-.11,.18,-.15,.06,-.25,.12,-.07,.10,.17,-.28,-.23,.11,.13,-.23,-.10,-.18,-.09,.09,-.18,.05,.10,.06,.22,.25,-.22,-.10,-.09,-.02,.02,-.21,-.05,.45,-1.02,-1.92,.19,-.24,-.18,.11,-.12,.76,.29,-.55,.93,-.29,.24,-.10,-.26,-.87,-.08,.07,.02,.07,.14,.06,.16,-.12,-.11,.72,-.13,.47,-.05,.16,.21,.64,.42,-.04,-.13,.23,-.18,-.05,-.03,.00,-.33,.01,-.16,-.20,-.27,.01,.12,.02,-.40,.01,-.35,.13,-.13,.21,-.24,-.31,.03,.06,-.21,-.01,.06,-.07,-.09,-.02,.19,.11,.05,.17,-.04,-.09,.19,-.25,.13,.34,-.39,-.03,.27,-.16,.17,-.73,.27,.42,-.05,.06,.24,-.15,.14,-.10,-.10,-.15,-.21,-.11,-.21,-.06,.15,-.07,-.12,.10,.01,-.05,-.04,.25,-.19,-.13,.15,-.08,-.08,.02,.02,.08,.22,-.00,-.22,.08,-.25,-.07,.08,-.22,.08,-.87,-.13,-.33,-.19,-.33,.26,-.09,-.07,.45,.22,-.09,.55,.31,-.20,.20,.17,-.01,-.15,-.11,-.12,.04,-.39,-.26,-.01,.19,-.33,-.03,-.33,-.27,-.16,.04,.15,-.21,-.17,-.10,-.06,-.05,-.23,-.05,.02,.02,.07,.03,-.17,-.16,-.01,-.20,-.18,-.40,.14,.21,-.21,-.07,.50,.08,.07,1.01,.21,.01,.22,-.25);
const float LAYERS_18_BIAS[] = float[16](.04,.18,-.37,-.23,-.39,.26,.41,-.00,-.29,.37,-.08,-.12,.15,.03,-.33,.16);
const float LAYERS_20_WEIGHT[] = float[256](-.24,-.24,-.14,-.13,.09,-.25,-.12,-.10,.18,-.15,.08,.18,-.14,-.22,-.10,-.30,.14,.07,-.15,-.24,-.12,-.23,.04,-.23,.13,-.35,.12,.06,.06,-.14,.05,.13,-.11,-.14,-.02,-.12,-.20,-.32,.30,.03,.15,.00,-.02,-.08,-.82,-.21,-.21,.03,-.18,-.32,.06,.14,.17,.08,-.04,.03,.07,.15,-.10,.05,-.13,-.03,.05,-.25,.07,-.68,-.24,-.00,.04,-.05,.48,-.10,-.08,.42,.07,-.05,.07,.02,-.08,.44,.09,-.29,.05,.09,.20,-.29,-.22,.06,.22,.04,.05,-.18,-.18,-.01,.10,-.24,-.04,.07,-.03,-.08,.24,-.18,.10,-.11,.01,-.24,.23,-.08,.04,.15,.01,.10,-.10,-.16,.18,.06,.10,-.09,.09,-.22,-.04,-.10,-.15,.02,-.01,-.12,.09,-.01,-.09,.14,-.22,-.09,-.36,-.15,-.24,.12,.16,-.30,.14,.12,-.02,-.01,-.22,-.09,-.11,.11,-.11,-.03,-.20,-.19,-.37,-.02,.02,.10,.04,-.12,-.05,-.17,.16,.12,-.02,-.10,-.23,-.05,-.49,.25,.68,.04,.14,-.25,.04,-.01,-.88,.02,.18,-.46,.08,.01,-.07,.14,.39,-.96,.11,.30,.07,.18,.15,.31,.39,.17,-.11,-.11,-.00,-.01,.19,.25,-.14,-.03,-.23,.14,-.08,.18,-.00,-.10,-.19,-.23,-.20,.01,-.07,-.28,-.04,.09,-.26,-.05,-.09,.05,-.12,-.23,.09,.11,-.20,-.22,-.18,-.01,.01,-.06,.03,-.03,-.08,-.21,-.19,-.02,-.11,.21,.02,-.20,.02,.08,-.24,-.12,.23,.35,-.08,.14,-.22,-.02,.23,.01,-.23,-.77,-.04,.06,-.31,.05,.00,-.32);
const float LAYERS_20_BIAS[] = float[16](.04,-.05,-.24,-.24,.36,.02,-.15,-.12,.01,-.06,.07,.10,-.21,-.06,-.16,-.19);
const float LAYERS_22_WEIGHT[] = float[48](-.05,-.13,-.37,-.16,.31,-.05,-.10,.09,.14,-.07,-.11,.11,.21,-.05,.13,.46,.09,.02,-.55,.07,.35,.18,-.08,-.06,.10,-.02,.20,.52,-.07,.11,.05,.26,.21,.12,.36,.05,.22,.01,-.10,.02,-.12,-.11,.27,.09,-.00,.23,-.21,.03);
const float LAYERS_22_BIAS[] = float[3](.46,-.01,.12);

float WORKSPACE1[] = float[256](.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0);
float WORKSPACE2[] = float[256](.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0);

vec3 mlp(vec2 x) {
	vec3 q = vec3(.0);
	for (int i = 0; i < LAYERS_0_WEIGHT_0_SIZE ; i++) {
		float sum = LAYERS_0_BIAS[i];
		for (int j = 0; j < LAYERS_0_WEIGHT_1_SIZE ; j++) {
			sum += x[j] * LAYERS_0_WEIGHT[i * LAYERS_0_WEIGHT_1_SIZE + j];
		}
		WORKSPACE1[i] = max(sum, 0.0); // ReLU activation
	}
	for (int i = 0; i < LAYERS_2_WEIGHT_0_SIZE ; i++) {
		float sum = LAYERS_2_BIAS[i];
		for (int j = 0; j < LAYERS_2_WEIGHT_1_SIZE ; j++) {
			sum += WORKSPACE1[j] * LAYERS_2_WEIGHT[i * LAYERS_2_WEIGHT_1_SIZE + j];
		}
		WORKSPACE2[i] = max(sum, 0.0); // ReLU activation
	}
	for (int i = 0; i < LAYERS_4_WEIGHT_0_SIZE ; i++) {
		float sum = LAYERS_4_BIAS[i];
		for (int j = 0; j < LAYERS_4_WEIGHT_1_SIZE ; j++) {
			sum += WORKSPACE2[j] * LAYERS_4_WEIGHT[i * LAYERS_4_WEIGHT_1_SIZE + j];
		}
		WORKSPACE1[i] = max(sum, 0.0); // ReLU activation
	}
	for (int i = 0; i < LAYERS_6_WEIGHT_0_SIZE ; i++) {
		float sum = LAYERS_6_BIAS[i];
		for (int j = 0; j < LAYERS_6_WEIGHT_1_SIZE ; j++) {
			sum += WORKSPACE1[j] * LAYERS_6_WEIGHT[i * LAYERS_6_WEIGHT_1_SIZE + j];
		}
		WORKSPACE2[i] = max(sum, 0.0); // ReLU activation
	}
	for (int i = 0; i < LAYERS_8_WEIGHT_0_SIZE ; i++) {
		float sum = LAYERS_8_BIAS[i];
		for (int j = 0; j < LAYERS_8_WEIGHT_1_SIZE ; j++) {
			sum += WORKSPACE2[j] * LAYERS_8_WEIGHT[i * LAYERS_8_WEIGHT_1_SIZE + j];
		}
		WORKSPACE1[i] = max(sum, 0.0); // ReLU activation
	}
	for (int i = 0; i < LAYERS_10_WEIGHT_0_SIZE ; i++) {
		float sum = LAYERS_10_BIAS[i];
		for (int j = 0; j < LAYERS_10_WEIGHT_1_SIZE ; j++) {
			sum += WORKSPACE1[j] * LAYERS_10_WEIGHT[i * LAYERS_10_WEIGHT_1_SIZE + j];
		}
		WORKSPACE2[i] = max(sum, 0.0); // ReLU activation
	}
	for (int i = 0; i < LAYERS_12_WEIGHT_0_SIZE ; i++) {
		float sum = LAYERS_12_BIAS[i];
		for (int j = 0; j < LAYERS_12_WEIGHT_1_SIZE ; j++) {
			sum += WORKSPACE2[j] * LAYERS_12_WEIGHT[i * LAYERS_12_WEIGHT_1_SIZE + j];
		}
		WORKSPACE1[i] = max(sum, 0.0); // ReLU activation
	}
	for (int i = 0; i < LAYERS_14_WEIGHT_0_SIZE ; i++) {
		float sum = LAYERS_14_BIAS[i];
		for (int j = 0; j < LAYERS_14_WEIGHT_1_SIZE ; j++) {
			sum += WORKSPACE1[j] * LAYERS_14_WEIGHT[i * LAYERS_14_WEIGHT_1_SIZE + j];
		}
		WORKSPACE2[i] = max(sum, 0.0); // ReLU activation
	}
	for (int i = 0; i < LAYERS_16_WEIGHT_0_SIZE ; i++) {
		float sum = LAYERS_16_BIAS[i];
		for (int j = 0; j < LAYERS_16_WEIGHT_1_SIZE ; j++) {
			sum += WORKSPACE2[j] * LAYERS_16_WEIGHT[i * LAYERS_16_WEIGHT_1_SIZE + j];
		}
		WORKSPACE1[i] = max(sum, 0.0); // ReLU activation
	}
	for (int i = 0; i < LAYERS_18_WEIGHT_0_SIZE ; i++) {
		float sum = LAYERS_18_BIAS[i];
		for (int j = 0; j < LAYERS_18_WEIGHT_1_SIZE ; j++) {
			sum += WORKSPACE1[j] * LAYERS_18_WEIGHT[i * LAYERS_18_WEIGHT_1_SIZE + j];
		}
		WORKSPACE2[i] = max(sum, 0.0); // ReLU activation
	}
	for (int i = 0; i < LAYERS_20_WEIGHT_0_SIZE ; i++) {
		float sum = LAYERS_20_BIAS[i];
		for (int j = 0; j < LAYERS_20_WEIGHT_1_SIZE ; j++) {
			sum += WORKSPACE2[j] * LAYERS_20_WEIGHT[i * LAYERS_20_WEIGHT_1_SIZE + j];
		}
		WORKSPACE1[i] = max(sum, 0.0); // ReLU activation
	}
	for (int i = 0; i < LAYERS_22_WEIGHT_0_SIZE ; i++) {
		float sum = LAYERS_22_BIAS[i];
		for (int j = 0; j < LAYERS_22_WEIGHT_1_SIZE ; j++) {
			sum += WORKSPACE1[j] * LAYERS_22_WEIGHT[i * LAYERS_22_WEIGHT_1_SIZE + j];
		}
		q[i] = 1.0 / (1.0 + exp(-sum)); // Sigmoid activation
	}
	return q;
}

void mainImage(out vec4 to, in vec2 at) {
	vec2 uv = (at * 2. - iResolution.xy)/iResolution.y * vec2(1.,-1.);
	to = vec4(mlp(uv), 1.); // 🤖
}
